name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (for example, 1.0.0)"
        required: true
      prerelease:
        description: "Prerelease?"
        type: boolean
        default: false

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"
          cache-dependency-path: "electron-app/yarn.lock"

      - name: Install dependencies
        working-directory: electron-app
        run: yarn install

      # Build Windows App
      - name: Build Windows App
        if: matrix.os == 'windows-latest'
        working-directory: electron-app
        run: yarn build:win

      # Upload build artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: |
            electron-app/dist/*.exe
            electron-app/dist/*.msi
            electron-app/dist/*.dmg
            electron-app/dist/*.AppImage
            electron-app/dist/*.deb
            electron-app/dist/*.snap
          if-no-files-found: ignore

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
